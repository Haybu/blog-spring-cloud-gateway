# make sure to have kind installed. run ../infrastructure/start-kind-cluster.sh script file
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-service
spec:
  selector:
    matchLabels:
      app: backend-service
  template:
    metadata:
      labels:
        app: backend-service
    spec:
      containers:
        - name: backend-service
          image: localhost:5000/backend-service:latest
          env:
            - name: spring.profiles.active
              value: kubernetes
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
---
kind: Service
apiVersion: v1
metadata:
  name: backend-service
spec:
  selector:
    app: backend-service
  ports:
    # Default port used by the image
    - port: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-service
spec:
  selector:
    matchLabels:
      app: frontend-service
  template:
    metadata:
      labels:
        app: frontend-service
    spec:
      containers:
        - name: frontend-service
          image: localhost:5000/frontend-service:latest
          env:
            - name: spring.profiles.active
              value: kubernetes
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
---
kind: Service
apiVersion: v1
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend-service
  ports:
    # Default port used by the image
    - port: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-ingress
spec:
  ingressClassName: ambassador
  rules:
    - http:
        paths:
          - path: /app/
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 8080
